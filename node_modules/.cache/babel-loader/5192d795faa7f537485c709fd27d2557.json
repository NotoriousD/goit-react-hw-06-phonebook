{"ast":null,"code":"import _defineProperty from\"D:\\\\michael\\\\my\\\\goit-react-hw-06-phonebook\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"D:\\\\michael\\\\my\\\\goit-react-hw-06-phonebook\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\michael\\\\my\\\\goit-react-hw-06-phonebook\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\michael\\\\my\\\\goit-react-hw-06-phonebook\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\michael\\\\my\\\\goit-react-hw-06-phonebook\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import styles from\"./contactform.module.scss\";import{addContact}from\"../../Redux/Actions/contact\";import{connect}from\"react-redux\";import{CSSTransition}from\"react-transition-group\";var contactform=/*#__PURE__*/function(_Component){_inherits(contactform,_Component);var _super=_createSuper(contactform);function contactform(){var _this;_classCallCheck(this,contactform);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={name:\"\",number:\"\",isExist:false,duplicateContact:\"\"};_this.handleInput=function(e){return _this.setState(_defineProperty({},e.currentTarget.name,e.currentTarget.value));};_this.handleSubmit=function(event){event.preventDefault();var name=_this.state.name;var contacts=_this.props.contacts;var avaibleNames=contacts.map(function(contact){return contact.name.toLowerCase();});if(avaibleNames.includes(name.toLowerCase())){_this.setState({isExist:true,duplicateContact:name});setTimeout(function(){return _this.setState({isExist:false,duplicateContact:\"\"});},5000);}else{_this.props.onSubmit(_this.state);_this.setState({name:\"\",number:\"\",isExist:false,duplicateContact:\"\"});}};return _this;}_createClass(contactform,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevState){var contacts=this.props.contacts;if(prevState.contacts!==contacts){localStorage.setItem(\"contacts\",JSON.stringify(contacts));console.log(contacts);}}},{key:\"render\",value:function render(){var _this$state=this.state,name=_this$state.name,number=_this$state.number,isExist=_this$state.isExist,duplicateContact=_this$state.duplicateContact;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:styles.headWrapper},/*#__PURE__*/React.createElement(CSSTransition,{in:true,appear:true,timeout:500,classNames:styles},/*#__PURE__*/React.createElement(\"h1\",{className:styles.title},\"Phonebook\")),/*#__PURE__*/React.createElement(CSSTransition,{in:isExist,timeout:250,classNames:styles,unmountOnExit:true},/*#__PURE__*/React.createElement(\"div\",{className:styles.error},duplicateContact,\" already exist!\"))),/*#__PURE__*/React.createElement(\"div\",{className:styles.border},/*#__PURE__*/React.createElement(\"form\",{className:styles.form,onSubmit:this.handleSubmit},/*#__PURE__*/React.createElement(\"h3\",null,\"Name\"),/*#__PURE__*/React.createElement(\"input\",{className:styles.input,name:\"name\",type:\"text\",onChange:this.handleInput,value:name}),/*#__PURE__*/React.createElement(\"h3\",null,\"Number\"),/*#__PURE__*/React.createElement(\"input\",{name:\"number\",className:styles.input,pattern:\"[0-9]{3}-[0-9]{2}-[0-9]{2}\",placeholder:\"000-00-00\",type:\"tel\",onChange:this.handleInput,value:number}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"button\",{className:styles.button,type:\"submit\",disabled:this.state.name===\"\"||this.state.number===\"\"?true:false},\"Add contact\"))));}}]);return contactform;}(Component);var mapStateToProps=function mapStateToProps(state){return{contacts:state.contact};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onSubmit:function onSubmit(data){return dispatch(addContact(data));}};};export default connect(mapStateToProps,mapDispatchToProps)(contactform);","map":{"version":3,"sources":["D:/michael/my/goit-react-hw-06-phonebook/src/Components/ContactForm/ContactForm.jsx"],"names":["React","Component","styles","addContact","connect","CSSTransition","contactform","state","name","number","isExist","duplicateContact","handleInput","e","setState","currentTarget","value","handleSubmit","event","preventDefault","contacts","props","avaibleNames","map","contact","toLowerCase","includes","setTimeout","onSubmit","prevState","localStorage","setItem","JSON","stringify","console","log","headWrapper","title","error","border","form","input","button","mapStateToProps","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport styles from \"./contactform.module.scss\";\nimport { addContact } from \"../../Redux/Actions/contact\";\nimport { connect } from \"react-redux\";\nimport { CSSTransition } from \"react-transition-group\";\n\nclass contactform extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n    isExist: false,\n    duplicateContact: \"\",\n  };\n\n  handleInput = (e) =>\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value,\n    });\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { name } = this.state;\n    const { contacts } = this.props;\n\n    const avaibleNames = contacts.map((contact) => contact.name.toLowerCase());\n\n    if (avaibleNames.includes(name.toLowerCase())) {\n      this.setState({ isExist: true, duplicateContact: name });\n      setTimeout(\n        () => this.setState({ isExist: false, duplicateContact: \"\" }),\n        5000\n      );\n    } else {\n      this.props.onSubmit(this.state);\n      this.setState({\n        name: \"\",\n        number: \"\",\n        isExist: false,\n        duplicateContact: \"\",\n      });\n    }\n  };\n\n  componentDidUpdate(prevState) {\n    const { contacts } = this.props;\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n      console.log(contacts);\n    }\n  }\n\n  render() {\n    const { name, number, isExist, duplicateContact } = this.state;\n    return (\n      <div>\n        <div className={styles.headWrapper}>\n          <CSSTransition\n            in={true}\n            appear={true}\n            timeout={500}\n            classNames={styles}\n          >\n            <h1 className={styles.title}>Phonebook</h1>\n          </CSSTransition>\n\n          <CSSTransition\n            in={isExist}\n            timeout={250}\n            classNames={styles}\n            unmountOnExit\n          >\n            <div className={styles.error}>\n              {duplicateContact} already exist!\n            </div>\n          </CSSTransition>\n        </div>\n\n        <div className={styles.border}>\n          <form className={styles.form} onSubmit={this.handleSubmit}>\n            <h3>Name</h3>\n            <input\n              className={styles.input}\n              name=\"name\"\n              type=\"text\"\n              onChange={this.handleInput}\n              value={name}\n            ></input>\n            <h3>Number</h3>\n            <input\n              name=\"number\"\n              className={styles.input}\n              pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n              placeholder=\"000-00-00\"\n              type=\"tel\"\n              onChange={this.handleInput}\n              value={number}\n            ></input>\n            <br />\n            <button\n              className={styles.button}\n              type=\"submit\"\n              disabled={\n                this.state.name === \"\" || this.state.number === \"\"\n                  ? true\n                  : false\n              }\n            >\n              Add contact\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contact,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (data) => dispatch(addContact(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(contactform);\n"]},"metadata":{},"sourceType":"module"}