{"ast":null,"code":"import _classCallCheck from\"D:\\\\michael\\\\my\\\\goit-react-hw-06-phonebook\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\michael\\\\my\\\\goit-react-hw-06-phonebook\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\michael\\\\my\\\\goit-react-hw-06-phonebook\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\michael\\\\my\\\\goit-react-hw-06-phonebook\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import styles from\"./contactlist.module.css\";import{TransitionGroup,CSSTransition}from\"react-transition-group\";import{connect}from\"react-redux\";import{deleteContact as _deleteContact}from\"../../Redux/Actions/contact\";var ContactList=/*#__PURE__*/function(_Component){_inherits(ContactList,_Component);var _super=_createSuper(ContactList);function ContactList(){var _this;_classCallCheck(this,ContactList);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.handleDeleteContact=function(id){return function(){var deleteContact=_this.props.deleteContact;deleteContact(id);};};return _this;}_createClass(ContactList,[{key:\"render\",value:function render(){var _this2=this;var contacts=this.props.contacts;return/*#__PURE__*/React.createElement(TransitionGroup,{component:\"ul\",className:styles.list},contacts.map(function(item){return/*#__PURE__*/React.createElement(CSSTransition,{key:item.id,timeout:250,classNames:styles},/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"div\",{className:styles.wrapper},/*#__PURE__*/React.createElement(\"span\",{className:styles.telName},item.name),/*#__PURE__*/React.createElement(\"span\",{className:styles.telNumber},item.number),/*#__PURE__*/React.createElement(\"button\",{className:styles.closeBtn,id:item.id,onClick:_this2.handleDeleteContact(item.id)},\"\\xD7\"))));}));}}]);return ContactList;}(Component);var mapStateToProps=function mapStateToProps(_ref,props){var contact=_ref.contact,filter=_ref.filter;return{contacts:filter?contact.filter(function(item){return item.name.toLowerCase().includes(filter.toLowerCase());}):contact};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{deleteContact:function deleteContact(id){return dispatch(_deleteContact(id));}};};export default connect(mapStateToProps,mapDispatchToProps)(ContactList);","map":{"version":3,"sources":["D:/michael/my/goit-react-hw-06-phonebook/src/Components/ContactList/ContactList.jsx"],"names":["React","Component","styles","TransitionGroup","CSSTransition","connect","deleteContact","ContactList","handleDeleteContact","id","props","contacts","list","map","item","wrapper","telName","name","telNumber","number","closeBtn","mapStateToProps","contact","filter","toLowerCase","includes","mapDispatchToProps","dispatch"],"mappings":"4oBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,OAASC,eAAT,CAA0BC,aAA1B,KAA+C,wBAA/C,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,aAAa,GAAbA,CAAAA,cAAT,KAA8B,6BAA9B,C,GAGMC,CAAAA,W,+UACJC,mB,CAAsB,SAACC,EAAD,QAAQ,WAAM,IAC1BH,CAAAA,aAD0B,CACR,MAAKI,KADG,CAC1BJ,aAD0B,CAGlCA,aAAa,CAACG,EAAD,CAAb,CACD,CAJqB,E,8EAMb,oBACCE,CAAAA,QADD,CACc,KAAKD,KADnB,CACCC,QADD,CAEP,mBACE,oBAAC,eAAD,EAAiB,SAAS,CAAC,IAA3B,CAAgC,SAAS,CAAET,MAAM,CAACU,IAAlD,EACGD,QAAQ,CAACE,GAAT,CAAa,SAACC,IAAD,qBACZ,oBAAC,aAAD,EAAe,GAAG,CAAEA,IAAI,CAACL,EAAzB,CAA6B,OAAO,CAAE,GAAtC,CAA2C,UAAU,CAAEP,MAAvD,eACE,2CACE,2BAAK,SAAS,CAAEA,MAAM,CAACa,OAAvB,eACE,4BAAM,SAAS,CAAEb,MAAM,CAACc,OAAxB,EAAkCF,IAAI,CAACG,IAAvC,CADF,cAEE,4BAAM,SAAS,CAAEf,MAAM,CAACgB,SAAxB,EAAoCJ,IAAI,CAACK,MAAzC,CAFF,cAIE,8BACE,SAAS,CAAEjB,MAAM,CAACkB,QADpB,CAEE,EAAE,CAAEN,IAAI,CAACL,EAFX,CAGE,OAAO,CAAE,MAAI,CAACD,mBAAL,CAAyBM,IAAI,CAACL,EAA9B,CAHX,SAJF,CADF,CADF,CADY,EAAb,CADH,CADF,CAsBD,C,yBA/BuBR,S,EA4C1B,GAAMoB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAAsBX,KAAtB,CAAgC,IAA7BY,CAAAA,OAA6B,MAA7BA,OAA6B,CAApBC,MAAoB,MAApBA,MAAoB,CACtD,MAAO,CACLZ,QAAQ,CAAEY,MAAM,CACZD,OAAO,CAACC,MAAR,CAAe,SAACT,IAAD,QACbA,CAAAA,IAAI,CAACG,IAAL,CAAUO,WAAV,GAAwBC,QAAxB,CAAiCF,MAAM,CAACC,WAAP,EAAjC,CADa,EAAf,CADY,CAIZF,OALC,CAAP,CAOD,CARD,CAUA,GAAMI,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACxCrB,aAAa,CAAE,uBAACG,EAAD,QAAQkB,CAAAA,QAAQ,CAACrB,cAAa,CAACG,EAAD,CAAd,CAAhB,EADyB,CAAf,EAA3B,CAIA,cAAeJ,CAAAA,OAAO,CAACgB,eAAD,CAAkBK,kBAAlB,CAAP,CAA6CnB,WAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport styles from \"./contactlist.module.css\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport { deleteContact } from \"../../Redux/Actions/contact\";\nimport PropTypes from \"prop-types\";\n\nclass ContactList extends Component {\n  handleDeleteContact = (id) => () => {\n    const { deleteContact } = this.props;\n\n    deleteContact(id);\n  };\n\n  render() {\n    const { contacts } = this.props;\n    return (\n      <TransitionGroup component=\"ul\" className={styles.list}>\n        {contacts.map((item) => (\n          <CSSTransition key={item.id} timeout={250} classNames={styles}>\n            <li>\n              <div className={styles.wrapper}>\n                <span className={styles.telName}>{item.name}</span>\n                <span className={styles.telNumber}>{item.number}</span>\n\n                <button\n                  className={styles.closeBtn}\n                  id={item.id}\n                  onClick={this.handleDeleteContact(item.id)}\n                >\n                  &times;\n                </button>\n              </div>\n            </li>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    );\n  }\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nconst mapStateToProps = ({ contact, filter }, props) => {\n  return {\n    contacts: filter\n      ? contact.filter((item) =>\n          item.name.toLowerCase().includes(filter.toLowerCase())\n        )\n      : contact,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteContact: (id) => dispatch(deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n"]},"metadata":{},"sourceType":"module"}